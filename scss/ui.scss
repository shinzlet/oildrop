@import "_common.scss";

:root {
    --width: 500px;
    --height: 600px;
    --panel-height: calc(var(--height) - var(--bar-height) - 2 * var(--gap));

    --snackbar-active: linear-gradient(20deg, #2AF598, #009EFD);
    --snackbar-inactive: linear-gradient(20deg, #FF6480, #F22E63);
    --snackbar-active-text: rgba(0, 0, 0, 0.8);
    --snackbar-inactive-text: rgba(255, 255, 255, 0.6);

    --scroll-track: var(--primary-6);
    --scroll-thumb: var(--primary-4);
    --card-action-background: var(--primary-7);
    --card-action-background-hover: var(--primary-5);
}

body {
    width: var(--width);
    height: var(--height);
    margin: auto auto;
}

body.light {
    --scroll-track: var(--primary-1);
    --scroll-thumb: var(--primary-3);
    --card-action-background: var(--primary-2);
    --card-action-background-hover: var(--primary-3);

    & #home {
        background-image: url("/assets/background_light.png");
    }
}

input, textarea, select {
    font-family: inherit;
    font-size: inherit;
}

@media (min-width: 500px), (min-height: 600px) {
    :root {
        --width: 100vw;
        --height: 100vh;
    }
}

@media (min-width: 1000px) {
    :root {
        --width: 80vw;
        --height: 80vh;

        font-size: 14pt;
    }

    body {
        margin-top: calc(calc(100vh - var(--height)) / 2);
    }

    #home {
        border-radius: var(--control-radius);
        box-shadow: 0 0 2rem 1rem rgba(255, 255, 255, 0.1);
    }

    body.light #home {
        box-shadow: 0 0 2rem 1rem rgba(0, 0, 0, 0.1);
    }
}

#home {
    display: flex;
    flex-direction: column;

    width: 100%;
    height: 100%;
    padding: calc(var(--gap) / 2) var(--gap) calc(var(--gap) / 2) var(--gap);
    box-sizing: border-box;

    background-image: url("/assets/background_dark.png");
    background-color: var(--background-1);
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;

    &::after {
        display: block;
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        pointer-events: none;
        background: black;
        opacity: 0;
        transition: opacity var(--anim-time) linear;
    }

    & > * {
        margin-top: calc(var(--gap) / 2);
        margin-bottom: calc(var(--gap) / 2);
    }
}

.grayout {
    pointer-events: none !important;
    user-select: none;

    &::after {
        opacity: 0.5 !important;
    }
}

#options {
    display: flex;
    justify-content: space-between;
    height: var(--bar-height);
}

#logo {
    font-family: 'Bebas Neue';
    font-size: 2rem;
    vertical-align: center;
    display: flex;
    align-items: center;

    &::before {
        @include pseudo-vis;
        @include mask-icon("/assets/oildrop_droplet.svg");
        background: var(--text-normal);
        width: 0.6em;
        height: 0.6em;
        margin-right: 0.2em;
        margin-bottom: 0.1em;
    }
}

#light-toggle-icon {
    --element-size: var(--bar-height);
    --checked-icon: url("/assets/dark_mode_icon.svg");
    --unchecked-icon: url("/assets/light_mode_icon.svg");
    font-size: 2rem;
}

#settings-button {
    width: var(--bar-height);
    height: var(--bar-height);
    background: transparent;
    padding: 0;

    &:hover {
        background: var(--background-3);

        &::before {
            background: var(--text-highlight);
        }
    }

    &::before {
        @include pseudo-vis;
        @include mask-icon("/assets/settings_icon.svg");
        background: var(--text-normal);
        width: 2rem;
        height: 2rem;
    }
}

#overview-controls {
    & > * {
        height: var(--bar-height);
    }

    & > .select-wrapper {
        flex-grow: 1;
    }
}

// In Oildrop, I use checkboxes wrapped in labels
// in order to style them. A label that contains a checkbox
// will, when clicked, toggle the checkbox, which lets us
// style a div instead of the checkbox itself.
label > input[type=checkbox].wrapped-checkbox {
    // This is effectively just doing a display:none, but
    // it allows the element to still be focused on.
    position: absolute;
    opacity: 0;
    pointer-events: none;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
}

.checkbox-proxy {
    height: var(--element-size);
    width: var(--element-size);

    background: var(--element-background);
    border-radius: var(--control-radius);

    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;

    &::before {
        @include pseudo-vis;
        @include mask-icon("");
        mask-image: var(--unchecked-icon);

        width: 1em;
        height: 1em;
        background: var(--text-normal);
    }

    &:hover {
        background: var(--background-3);

        &::before {
            background: var(--text-highlight);
        }
    }

    .wrapped-checkbox:checked + &::before {
        mask-image: var(--checked-icon);
    }

    .wrapped-checkbox:focus + & {
        outline: var(--focus-weight) var(--focus-color) solid;
    }
}

*:focus {
    outline: var(--focus-weight) var(--focus-color) solid;
}

#global-pause-wrapper {
    flex-grow: 0;
}

#global-pause-icon {
    --element-size: var(--bar-height);
    --element-background: var(--background-2);
    --checked-icon: url("/assets/play_icon.svg");
    --unchecked-icon: url("/assets/pause_icon.svg");
}

select {
    cursor: pointer;
}

#filter {
    font-size: 1.2rem;
}

#new-script {
    justify-content: space-between;
    font-weight: semibold;
    white-space: nowrap;
    flex-grow: 0;
    
    &::before {
        @include pseudo-vis;
        @include mask-icon("/assets/new_script_icon.svg");

        width: 0.9em;
        height: 0.9em;

        margin-right: 0.5em;
        margin-bottom: 0.2em; /* This just slightly tweaks vertical alignment. */
        background: var(--accent-text);
    }

    &:hover {
        &::before {
            background: var(--accent-text-focus);
        }
    }
}

hr {
    width: 100%;
    opacity: 0.5;
    color: var(--hr-color);
}

#overview {
    flex-grow: 1;
    scrollbar-width: thin;
    scrollbar-color: var(--scroll-thumb) var(--scroll-track);
    overflow-y: scroll;
    list-style-type: none;
    padding: 0px;
    padding-right: calc(var(--gap) / 2);

    mask-image: url("/assets/vignette.svg");
    mask-size: cover;
    mask-position: center;
    mask-repeat: repeat-x;
}

.script-card {
    background: var(--background-2);
    border-radius: var(--control-radius);
    margin-bottom: var(--gap);
    padding: var(--gap);
    display: flex;
    justify-content: space-between;
    align-items: stretch;

    --button-size: 3rem;
    --details-width: calc(100% - 2.5 * var(--button-size) - 4 * var(--gap));
}

.script-description {
    width: var(--details-width);

    & p {
        margin: 0;
    }
}

.script-name {
    font-size: 1.4rem;
    font-weight: bolder;
    color: var(--text-highlight);
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    align-items: center;
    width: calc(100% - 1.2em - 0.5ch);
    float: left;

    &::before {
        @include pseudo-vis;
        width: 1.2em;
        height: 1.2em;
        margin-right: 0.5ch;
        margin-top: 0.15em;
        background-size: contain;
        background-repeat: no-repeat;
        background-position: center;
        float: left;
    }
}

.js-badge::before { background-image: url("/assets/js_badge.png"); }
.css-badge::before { background-image: url("/assets/css_badge.png"); }

.script-matches {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    width: 100%;
}

.script-date {
    font-size: 0.9rem;
    color: var(--primary-4);
    opacity: 0.7;
    display: flex;
    align-items: center;

    &::before {
        @include pseudo-vis;
        @include mask-icon("/assets/calendar_icon.svg");
        width: 0.8em;
        height: 0.8em;
        background: var(--primary-4);
        margin-bottom: 0.2em;
        margin-right: 0.5em;
    }
}

.script-actions {
    display: flex;
    align-items: center;
    flex-grow: 1;
    justify-content: space-between;
    position: relative;

    width: var(--actions-width);
    padding-left: var(--gap);

    &::before {
        @include pseudo-vis;
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        width: 0.125em;

        background: var(--text-normal);
        opacity: 0.3;
        border-radius: 0.625em;
    }
}

.round-button {
    width: var(--button-size);
    height: var(--button-size);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0px;
    border-radius: 50%;
    background: var(--card-action-background);

    &:hover {
        background: var(--card-action-background-hover);
    }

    &::before {
        @include pseudo-vis;
        background: var(--text-normal);

        width: 1.5em;
        height: 1.5em;
    }

    &:hover::before {
        background: var(--text-highlight);
    }
}

.script-edit::before {
    @include mask-icon("/assets/edit_icon.svg");
}

.script-delete::before {
    @include mask-icon("/assets/delete_icon.svg");
}

.script-enable-wrapper {
    display: flex;
    align-items: center;
}

.script-enable-icon {
    --element-size: 2em;
    --checked-icon: url("/assets/check_icon.svg");
    --element-background: transparent;
    box-shadow: 0 0 0 0.15em var(--text-normal);
    margin-right: var(--gap);

    &::before {
        width: 80%;
        height: 80%;
        background: transparent;
    }

    &:hover {
        box-shadow: 0 0 0 0.15em var(--text-highlight);

        &::before {
            background: transparent;
        }
    }

    .wrapped-checkbox:checked + &::before {
        background: var(--text-normal);
    }

    .wrapped-checkbox:checked + &:hover::before {
        background: var(--text-highlight);
    }
}

#snackbar-wrapper {
    height: 1.7em;
    overflow: hidden;
    border-radius: 0.1em;
    margin: 0px;
    flex-shrink: 0;

    &.hidden:not(:hover) {
        & > div {
            // color: rgba(0,0,0,0) !important;
            font-size: 0;
            transform: scaleY(0.1);
            border-radius: 0.4em;
        }
    }

    & > div {
        border-radius: var(--control-radius);
        transition-property: transform, font-size;
        transition-duration: var(--anim-time);
        transition-timing-function: ease;
        transform: none;
    }
}

#snackbar {
    text-align: center;
    vertical-align: center;
    background: var(--snackbar-active);
    color: var(--snackbar-active-text);
    height: 100%;

    &.inactive {
        background: var(--snackbar-inactive);
        color: var(--snackbar-inactive-text);
    }
}

#footer {
    display: flex;
    justify-content: space-between;
    vertical-align: center;
    opacity: 0.8;
}

.panel-wrapper {
    display: block;
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    height: 0;
    transition: height var(--anim-time) ease;
    border-radius: var(--control-radius) var(--control-radius) 0 0;
    background: var(--background-1);
    overflow: hidden;
    
    &.active {
        height: var(--panel-height);
    }
}

.panel {
    width: 100%;
    box-sizing: border-box;
    height: var(--panel-height);
    padding: var(--gap);
    display: flex;
    flex-direction: column;

    & > header:first-of-type {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;

        width: 100%;
        height: var(--bar-height);
        margin-bottom: var(--gap);
        padding-bottom: var(--gap);

        & > .dismiss-panels {
            --button-size: var(--bar-height);

            position: absolute;
            right: 0;
            top: 0;

            background: var(--background-2);

            &:hover {
                background: var(--background-3);
            }

            &::before {
                @include mask-icon("/assets/dismiss_icon.svg");
            }
        }

        &::after {
            @include pseudo-vis;
            position: absolute;
            left: 0;
            right: 0;
            bottom: 0;
            height: 0.125em;

            background: var(--text-normal);
            opacity: 0.3;
            border-radius: 0.625em;
        }
    }

    label {
        display: block;
        margin-top: var(--gap);

        &:first-of-type {
            margin-top: 0;
        }
    }
}

#editor {
    #editor-code {
        flex-grow: 1;
        font-family: "Space Mono";
        padding: 1ch;
        font-variant-ligatures: none;
    }

    .bar {
        margin-top: var(--gap);
    }

    label[title]::after {
        content: '(?)';
        display: inline-block;
        height: 0.7em;
        font-size: 0.7em;
        opacity: 0.5;
        margin-left: 0.5ch;
        margin-bottom: 0.3em;
        cursor: help;
    }
}

#settings {
    button {
        margin-bottom: var(--gap);
    }
}

.auto-height {
    height: auto;
}
